{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 6, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"","debugId":null}},
    {"offset": {"line": 60, "column": 0}, "map": {"version":3,"sources":["file:///Users/oleksiisydoruk/Documents/GitHub/test_tasks/dt/frontend/src/app/api/meals/%5Bid%5D/route.ts"],"sourcesContent":["import { NextRequest, NextResponse } from \"next/server\";\n\nconst BACKEND_URL = process.env.BACKEND_URL || \"http://localhost:3001\";\n\nexport async function GET(\n  _req: NextRequest,\n  { params }: { params: { id: string } }\n) {\n  try {\n    const url = `${BACKEND_URL}/meals/${params.id}`;\n\n    const response = await fetch(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n      },\n    });\n\n    if (!response.ok) {\n      throw new Error(`Backend responded with status: ${response.status}`);\n    }\n\n    const data = await response.json();\n    return NextResponse.json(data);\n  } catch (error) {\n    console.error(\"Error in meal API route:\", error);\n    return NextResponse.json({\n      status: 500,\n      error: error instanceof Error ? error.message : \"Failed to fetch meal\",\n    });\n  }\n}\n"],"names":[],"mappings":";;;AAAA;;AAEA,MAAM,cAAc,QAAQ,GAAG,CAAC,WAAW,IAAI;AAExC,eAAe,IACpB,IAAiB,EACjB,EAAE,MAAM,EAA8B;IAEtC,IAAI;QACF,MAAM,MAAM,GAAG,YAAY,OAAO,EAAE,OAAO,EAAE,EAAE;QAE/C,MAAM,WAAW,MAAM,MAAM,KAAK;YAChC,SAAS;gBACP,gBAAgB;YAClB;QACF;QAEA,IAAI,CAAC,SAAS,EAAE,EAAE;YAChB,MAAM,IAAI,MAAM,CAAC,+BAA+B,EAAE,SAAS,MAAM,EAAE;QACrE;QAEA,MAAM,OAAO,MAAM,SAAS,IAAI;QAChC,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;IAC3B,EAAE,OAAO,OAAO;QACd,QAAQ,KAAK,CAAC,4BAA4B;QAC1C,OAAO,gIAAA,CAAA,eAAY,CAAC,IAAI,CAAC;YACvB,QAAQ;YACR,OAAO,iBAAiB,QAAQ,MAAM,OAAO,GAAG;QAClD;IACF;AACF","debugId":null}}]
}